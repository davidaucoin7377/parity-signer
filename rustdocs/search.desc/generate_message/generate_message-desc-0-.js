searchState.loadedDescShard("generate_message", 0, "This crate is intended to support the Vault from the active\n<code>ADDRESS_BOOK</code> tree of the hot database has no entries to …\n<code>AddressBookEntry</code> searched in <code>ADDRESS_BOOK</code> tree of the hot …\n<code>AddressBookEntry</code> in hot database contains <code>encryption</code> and …\nProvided data signature (entered separately or as a part of\nUser-entered block hash has invalid length\nFetched network metadata version is lower than the one …\nContains the error value\nGenerate Message error.\nFetched network specs are not suitable for use in Vault.\n<code>METATREE</code> of the hot database should contain at most two …\n<code>METATREE</code> of the hot database has two entries for a network …\nContains the success value\nGenerate Message result.\nFetched network metadata is different from the one already …\nNetwork specs are already in the database\n<code>SPECSTREEPREP</code> tree of the hot database contains …\n<code>ADDRESS_BOOK</code> tree of the hot database contains …\n<code>ADDRESS_BOOK</code> tree of the hot database contains …\n<code>ADDRESS_BOOK</code> tree of the hot database contains …\nTried to fetch with <code>-u</code> key using address not known to the …\nTried to fetch with <code>-u</code> key using address already known to …\nFetched block hash could not be transformed in expected …\nFetched genesis hash could not be transformed in expected …\nFetched data is different from the one already in the hot …\nFetch network information from a node using RPC calls\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nProcess incoming command as interpreted by parser.\nHelpers\nFit network properties fetched via RPC call into data in …\nCalls <code>U::from(self)</code>.\nCommand line parser for the client\naddress book entry with exactly matching genesis hash\nname in <code>AddressBookEntry</code>\noptionally recorded block hash for which the metadata was …\nblock hash for which the metadata is fetched now\nnetwork supported encryption\nwhat exactly is wrong with the network specs\nnetwork name\nnetwork name\nnetwork name\nnetwork name\nnetwork name\nnetwork name\nnetwork name\nnetwork name\nnetwork version just fetched\nnetwork version in hot database, higher than the one just …\nname in <code>NetworkSpecs</code>\nnetwork address book title\nURL address\nURL address used for fetch\nURL address, for which two condlicting names were found\nURL address used for RPC call\nURL address used for RPC cal\ngenesis hash value as received through RPC call\nblock hash value as received through RPC call\nnetwork version\nnetwork version\nwhat exactly has changed\nData from RPC calls for <code>load_metadata</code> update payload.\nData from RPC calls for <code>add_specs</code> update payload.\nBlock hash, at which the metadata was fetched, as a …\nFetch data for <code>load_metadata</code> update payload through RPC …\nFetch data for <code>add_specs</code> update payload through RPC calls.\nFetch network metadata from given URL address at given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nFetched genesis hash, as a hexadecimal string\nFetched genesis hash, as a hexadecimal string\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFetched metadata, as a hexadecimal string\nFetched metadata, as a hexadecimal string\nFetched network properties, as a <code>Map</code>\nall payloads, <code>-t</code> key or no setting key was used\nFetched and interpreted data for <code>load_metadata</code> payload and …\nData needed to output <code>load_metadata</code> update payload file.\n<code>MetaValues</code> with corresponding block hash at the time of …\nno payloads, <code>-p</code> setting key was used\nonly new payloads, <code>-k</code> setting key was used\n<code>MetaValuesStamped</code> sorted into sets of newer and older, by …\nContent to print during <code>load-metadata&lt;-k/-p/-t&gt;</code> processing.\nTry updating <code>SortedMetaValues</code> with new <code>MetaValuesStamped</code>.\nWrite to file <code>add_specs</code> update payload as raw bytes.\nGet all <code>ADDRESS_BOOK</code> entries with address book titles.\nUpdate the database after <code>load-metadata</code> run.\nUpdate the database after <code>add-specs</code> run.\nGet network metadata file from given URL address at …\nProcess error depending on pass errors flag <code>-s</code>.\nGet all <code>ADDRESS_BOOK</code> entries with address book titles, for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerate Bulk Transaction Signing payload for testing\nGenerate with data into a specified file.\nSearch for any <code>ADDRESS_BOOK</code> entry with given genesis hash.\nGet <code>AddressBookEntry</code> from the database for given address …\nGet network specs <code>NetworkSpecs</code> from the hot database.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if <code>ADDRESS_BOOK</code> has entries with given <code>name</code> and …\nWrite to file <code>load_metadata</code> update payload as raw bytes.\nGet network information through RPC calls at <code>address</code> and …\nGet all entries from <code>META_HISTORY</code>.\nGet <code>NetworkSpecs</code> corresponding to the given …\nGet <code>NetworkSpecs</code> from the database for given address book …\nSet of the metadata entries with latest version known to …\nOther metadata entries. Since there are maximum two …\nCollect and sort <code>MetaValuesStamped</code> from the hot database\nCollect all <code>MetaValuesStamped</code> from the hot database.\nFetch data and assemble <code>NetworkSpecs</code> with only URL address …\nTry to get network specs <code>NetworkSpecs</code> from the hot …\nUpdate <code>NetworkSpecs</code> already existing in the database with …\nModify <code>NetworkSpecs</code> existing in the database <strong>only</strong> with …\nEqual size arrays for decimals and units.\nNo decimals and no unit.\nSingle decimals parameter and single unit.\nAccepted token from <code>system_properties</code> RPC call\nGet from <code>system_properties</code> RPC call results the network …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nTransform <code>system_properties</code> RPC call results into …\nCalls <code>U::from(self)</code>.\n<code>add-specs</code> payload\nProcess only the network referred to by URL address\nAlice key\nDeal with all relevant database entries\nShow all entries from <code>META_HISTORY</code> tree\nBoth QR code and text file, default\nProduce a bulk tx signing QR\nCheck that external file is valid network metadata and …\nPolkadot Vault data manipulation tool.\nReference key for <code>load-metadata</code> and <code>add-specs</code> commands.\nVerifier-to-be, for <code>make</code> and <code>sign</code> commands.\nKey <code>-d</code>: do <strong>not</strong> update the database, make RPC calls, and …\nData to process <code>derivations</code> command.\nEncode payload to multiframe QR\nKey <code>-f</code>: do <strong>not</strong> run RPC calls, produce output files from …\nTarget output format for <code>derivations</code>, <code>make</code> and <code>sign</code> …\nCommand details for <code>load-metadata</code>.\nCommand details for <code>add-specs</code>.\nKey <code>-k</code>: update database through RPC calls, produce output …\nProduce a test key info export QR\nPrepare payload for load-metadata update\n<code>load-metadata</code> payload\n<code>load-types</code> payload\nData to process <code>make</code> and <code>sign</code> commands.\nComplete update generation according\nGenerate release cold database at optionally provided path\nCreate file with network metadata at block hash\nMake file with hexadecimal metadata for defaults release …\nShow all hot database entries\nPayload for <code>make</code> and <code>sign</code> commands.\nProcess only a specified network\nShow all hot database entries\nNo verifier, to make unsigned updates.\nOverrides for <code>add-specs</code> command.\nKey <code>-p</code>: update database through RPC calls, do <strong>not</strong> produce …\nOnly QR code\nData to process <code>remove</code> command.\nRemove all data associated with a network\nRestore hot database to default state\nSetting key for <code>load-metadata</code> and <code>add-specs</code> commands.\nDisplay data commands.\nDisplay content of the a given tree of the hot database\nSign\nRemove specified network metadata entry.\nPrepare payload for add-specs update\nShow network specs from entry.\nReal verifier, <code>SufficientCrypto</code> is either assembled from …\nKey <code>-t</code> (no setting key defaults here): update database …\nOnly text file with hexadecimal string (used for tests)\nRemoving all network data by network address book title.\nData from command line for token override.\nTransfer metadata from hot database to release cold …\nPrepare payload for load-types update\nPrepare payload for <code>load_metadata</code> update from <code>.wasm</code> file\nVerifier-to-be, for <code>make</code> and <code>sign</code> commands.\nProcess only the network referred to by URL address\nDeal with all relevant database entries\nFlag to indicate that no overrides were invoked.\nReference key, as read from command line\nwho is signing the payload\ndo not update the database, make RPC calls, and produce …\nPath to the hot database\nPath to the hot database\nPath to the hot database\nDecimals of the token\nContents of the payload file\n<code>Encryption</code> override to specify encryption algorithm used …\nFolder to save completed update messages\ndo not run RPC calls, produce output files from database …\nFolder to save payloads ready for signing\nFolder to save payloads ready for signing\nFolder to save payloads ready for signing\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\ntarget output format\nTarget output format\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nupdate database through RPC calls, produce output files …\npayload\nProcess only a specified network\noutput name override\nOverrides, relevant only for <code>add-specs</code> command\nupdate database through RPC calls, do <strong>not</strong> produce any …\nSkip errors\nSetting key, as read from command line\nRead signature from a file\nSupply signature in hex format as command line argument\nRead signature from a file\nSupply signature in hex format as command line argument\n(no setting key defaults here): update database through RPC\nAddress book title for network in which addresses with …\nNetwork title override, so that user can specify the …\nToken override to specify decimals used to display balance …\nToken override to specify units used to display balance in …\nUnits of the token\nUse Alice key with a specified encryption scheme\nRead Verifier from a file\nSpecify Verifier as a hex string argument\nHash of the block at which meta is asked\nSize of a chunk in a multiframe RaptorQ encoding.\nSize of a chunk in a multiframe RaptorQ encoding.\nSize of a chunk in a multiframe RaptorQ encoding\nPath to release db\nPath to the hot database\nPath to the hot database\nPath to hot db\nHot database path\nHot database path\nPath to hot db\nDestination file to write qr code to\nFolder to save completed update messages\nFolder to save completed update messages\nWASM file\nFolder to save payloads ready for signing\nFolder to save payloads ready for signing\nFPS of a multiframe RaptorQ encoding\nAccountId of transaction in hex form.\nHex-encoded payload to encode\nPath to hot db\nNumber of keys to generate and export\nFile name\nQr or File\nPath to release db\nPath to a file to encode\nNumber of transactions in a bulk.\nupdate the DB.\nURL of the chain RPC point\nVersion\nSkip errors\nnetwork name or network address book title\nNetwork address\nEncryption scheme to use\nAddress book title\nPath to metadata file")