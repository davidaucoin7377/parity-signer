searchState.loadedDescShard("transaction_parsing", 0, "<code>NetworkSpecs</code> received in <code>add_specs</code> payload are for a …\n<code>NetworkSpecs</code> received in <code>add_specs</code> payload are for a …\nReceived <code>add_specs</code> update payload is signed by …\nKey corresponding to the address was not found in the db\nError parsing extensions of a signable transaction with …\nUpdate payload signature is invalid for given public key, …\nDB error.\nThere is a limited number of encryption algorithms …\nContains the error value\nTransaction parsing error.\nReceived <code>add_specs</code> or <code>load_types</code> is signed by …\nNetwork metadata needed to parse historical transaction, …\n<code>OrderedNetworkSpecs</code> needed to parse historical …\n<code>OrderedNetworkSpecs</code> needed to parse historical …\n<code>NetworkSpecs</code> received in <code>add_specs</code> payload are for a …\nReceived <code>load_metadata</code> update payload is signed by …\nUser attempted to load into Vault the metadata for the …\nReceived <code>load_metadata</code> update payload is signed by …\nReceived <code>load_metadata</code> update payload is signed.\nUser attempted to load into Vault the metadata for the …\nReceived <code>load_metadata</code> update payload is signed by …\nUser attempted to load into Vault the metadata for the …\nNetwork name and version from metadata received in …\nReceived update payload is not verified, although the …\nReceived <code>add_specs</code> or <code>load_metadata</code> update payload is not …\n<code>OrderedNetworkSpecs</code> for network in which the imported …\nReceived transaction that should be parsed prior to …\nAll transactions are expected to be the Substrate ones, …\nContains the success value\nThere is a limited number of payloads supported by the …\nTransaction parsing result.\nNetwork name and version from metadata received in …\nCan not separate method from extensions, bad transaction.\nMore than one entry found for network specs with given <code>name</code>…\n<code>NetworkSpecs</code> from the received <code>add_specs</code> payload already …\nEnum describing Stub content. Is used for proper …\nReceived transaction is unexpectedly short, more bytes …\nEnum containing card sets for four different outcomes: …\nTypes information received in the <code>load_types</code> payload is …\nReceived signable transaction (with prelude <code>53xx00</code>, <code>53xx02</code> …\nDecode content of payload <code>enable_dynamic_derivations</code> is a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\npayload that requires general verifier\npayload that requires general verifier\nnetwork <code>Encryption</code>\nnetwork supported encryption\nVault general verifier\ngenesis hash from the <code>load_metadata</code> payload, that was used …\nnetwork genesis hash\nnetwork name\nnetwork name\nnetwork name\nnetwork name as it is in the received metadata\nnetwork name as it is in the received metadata\nnetwork name\nnetwork name\nnetwork name\nnetwork name\nnetwork name (identical for received and for stored …\nnetwork name as it is in the received metadata\nnetwork name as it is in the network specs for genesis hash\n<code>VerifierValue</code> that was used to sign the update\n<code>VerifierValue</code> that has signed the payload instead of the …\n<code>VerifierValue</code> that was used to sign the update\n<code>VerifierValue</code> for the payload\n<code>VerifierValue</code> that has signed the update payload\n<code>VerifierValue</code> for the payload\ngeneral verifier associated <code>VerifierValue</code> in the database\ngeneral verifier associated <code>VerifierValue</code> in the database\n<code>VerifierValue</code> for the network in the database\n<code>VerifierValue</code> for the network in the database\nnetwork-associated <code>ValidCurrentVerifier</code>\nexpected verifier for this network\n<code>VerifierValue</code> currently associated with the general …\nnetwork version (identical for received and for stored …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nPartially parses dynamic derivation transaction to make it …\nParses dynamic derivation request and returns preview of …")